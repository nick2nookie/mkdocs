{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hello World","text":"<p>Selamat datang di website nick2nookie disini kita akan mulai belajar bersama membahas pemrograman dasar terutama mengenai Technical Development di odoo dan juga kita akan belajar Fungsional Odoo. Selai belajar teori kita juga akan latihan exercise praktek langsung untuk develop apalikasi/modul di Odoo versi 16.</p>"},{"location":"#tutorial-development","title":"Tutorial Development","text":"<ul> <li><code>Chapter 1: Architecture Overview</code></li> <li><code>Chapter 2: Development environment setup</code></li> <li><code>Chapter 3: A New Application</code></li> <li><code>Chapter 4: Models And Basic Fields</code></li> <li><code>Chapter 5: Security - A Brief Introduction</code></li> <li><code>Chapter 6: Finally, Some UI To Play With</code></li> <li><code>Chapter 7: Basic Views</code></li> <li><code>Chapter 8: Relations Between Models</code></li> <li><code>Chapter 9: Computed Fields And Onchanges</code></li> <li><code>Chapter 10: Ready For Some Action?</code></li> <li><code>Chapter 11: Constraints</code></li> <li><code>Chapter 12: Add The Sprinkles</code></li> <li><code>Chapter 13: Inheritance</code></li> <li><code>Chapter 14: Interact With Other Modules</code></li> <li><code>Chapter 15: A Brief History Of QWeb</code></li> <li><code>Chapter 16: Polish Your Code And Submit Your PR</code></li> </ul>"},{"location":"#fungsional","title":"Fungsional","text":"<pre><code>disini kita akan belajar membuat Setup Modul-modul dan pembahasanya secara fungsional\n1. Sales\n2. Purchase\n3. Accounting\n4. Manufacture\n5. Inventory\n</code></pre>"},{"location":"#blog","title":"Blog","text":""},{"location":"blog/","title":"Blog","text":""},{"location":"blog/post/odoo16/","title":"Odoo16","text":"<p><code>date: 2023-04-24 authors: nick2nookie description: &gt; odoo versi 16 categories:   - odoo</code></p>"},{"location":"blog/post/odoo16/#odoo-versi-16","title":"Odoo Versi 16","text":""},{"location":"dev_tutorial/","title":"DEV Tutorial","text":""},{"location":"dev_tutorial/01_architecture/","title":"Chapter 1: Architecture Overview","text":""},{"location":"dev_tutorial/01_architecture/#tutorial-development","title":"Tutorial Development","text":"<ul> <li>Chapter 1: Architecture Overview</li> <li>Chapter 2: Development environment setup</li> <li>Chapter 3: A New Application</li> <li>Chapter 4: Models And Basic Fields</li> <li>Chapter 5: Security - A Brief Introduction</li> <li>Chapter 6: Finally, Some UI To Play With</li> <li>Chapter 7: Basic Views</li> <li>Chapter 8: Relations Between Models</li> <li>Chapter 9: Computed Fields And Onchanges</li> <li>Chapter 10: Ready For Some Action?</li> <li>Chapter 11: Constraints</li> <li>Chapter 12: Add The Sprinkles</li> <li>Chapter 13: Inheritance</li> <li>Chapter 14: Interact With Other Modules</li> <li>Chapter 15: A Brief History Of QWeb</li> <li>Chapter 16: Polish Your Code And Submit Your PR</li> </ul>"},{"location":"dev_tutorial/01_architecture/#getting-started","title":"Getting Started","text":"<p>kita segera mulai pembelajaran development Odoo! kita akan belajar untuk mengembangkan modul Odoo kita sendiri.</p> <p>Tujuan dari tutorial ini adalah agar kita dapat mendapatkan wawasan tentang bagian terpenting dari kerangka pengembangan Odoo sambil mengembangkan modul Odoo kita sendiri untuk mengelola aset [real estate]. ada berberapa Bab yang harus sesuai urutannya karena mencakup pengembangan aplikasi Odoo secara bertahap.</p> <p>Dengan kata lain, setiap bab bergantung pada bab sebelumnya.</p> <p>ayo kita mulai</p>"},{"location":"dev_tutorial/01_architecture/#multitier-application","title":"Multitier application","text":"<p>odoo mengikuti aturan yang namanya <code>multitier architecture</code>_, ini berarti Presentasi Visual, Logika bisnis, dan penyimpanan Data dibuat terpisah. Secara umum gambaran ada di gambar berikut bahwa arsitektur dengan basis tiga layer (tingkat lapis) (image from Wikipedia):</p> <p> { align=center }</p> <pre><code>The presentation tier --&gt; adalah kombinasi dari HTML5, JavaScript &amp; CSS.\nThe logic tier --&gt; secara khusus di tulis dengan Python\nThe data tier --&gt; hanya support PostgreSQL sebagai manajamen database RDBMS.\n</code></pre> <p>Depending on the scope of your module, Odoo development can be done in any of these tiers. Therefore, before going any further, it may be a good idea to refresh your memory if you don't have an intermediate level in these topics.</p> <p>In order to go through this tutorial, you will need a very basic knowledge of HTML and an intermediate level of Python. Advanced topics will require more knowledge in the other subjects. There are plenty of tutorials freely accessible, so we cannot recommend one over another since it depends on your background.</p> <p>For reference this is the official <code>Python tutorial</code>_.</p> <pre><code>  Since version 15.0, Odoo is actively transitioning to using its own in-house developed `OWL\n  framework &lt;https://odoo.github.io/owl/&gt;`_ as part of its presentation tier. The legacy JavaScript\n  framework is still supported but will be deprecated over time. This will be discussed further in\n  advanced topics.\n</code></pre>"},{"location":"dev_tutorial/01_architecture/#odoo-modules","title":"Odoo modules","text":"<p>Both server and client extensions are packaged as modules which are optionally loaded in a database. A module is a collection of functions and data that target a single purpose.</p> <p>Odoo modules can either add brand new business logic to an Odoo system or alter and extend existing business logic. One module can be created to add your country's accounting rules to Odoo's generic accounting support, while a different module can add support for real-time visualisation of a bus fleet.</p> <p>Everything in Odoo starts and ends with modules.</p> <p>Terminology: developers group their business features in Odoo modules. The main user-facing modules are flagged and exposed as Apps, but a majority of the modules aren't Apps. Modules may also be referred to as addons and the directories where the Odoo server finds them form the <code>addons_path</code>.</p>"},{"location":"dev_tutorial/01_architecture/#composition-of-a-module","title":"Composition of a module","text":"<p>An Odoo module can contain a number of elements:</p> <p>1 <code>Business objects</code>     A business object (e.g. an invoice) is declared as a Python class. The fields defined in these classes are automatically mapped to database columns thanks to the <code>ORM (Object-Relational Mapping)</code> layer.</p> <p>2 <code>Object views</code>     Define UI display</p> <p>3 <code>Data files</code>     XML or CSV files declaring the model data:</p> <pre><code>- views or reports,\n- configuration data (modules parametrization),\n- demonstration data\n- and more\n</code></pre> <p>4 <code>Web controllers</code>     Handle requests from web browsers</p> <p>5 <code>Static web data</code>     Images, CSS or JavaScript files used by the web interface or website</p> <p>None of these elements are mandatory. Some modules may only add data files (e.g. country-specific accounting configuration), while others may only add business objects. During this training, we will create business objects, object views and data files.</p>"},{"location":"dev_tutorial/01_architecture/#module-structure","title":"Module structure","text":"<p>Each module is a directory within a module directory. Module directories are specified by using the :option:<code>--addons-path &lt;odoo-bin --addons-path&gt;</code> option.</p> <p>An Odoo module is declared by its :ref:<code>manifest &lt;reference/module/manifest&gt;</code>.</p> <p>When an Odoo module includes business objects (i.e. Python files), they are organized as a <code>Python package &lt;https://docs.python.org/3/tutorial/modules.html#packages&gt;</code>_ with a <code>__init__.py</code> file. This file contains import instructions for various Python files in the module.</p> <p>Here is a simplified module directory:</p> Direktori Modul<pre><code>    module\n    \u251c\u2500\u2500 models\n    \u2502   \u251c\u2500\u2500 *.py\n    \u2502   \u2514\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 data\n    \u2502   \u2514\u2500\u2500 *.xml\n    \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 __manifest__.py\n</code></pre>"},{"location":"dev_tutorial/01_architecture/#odoo-editions","title":"Odoo Editions","text":"<p>Odoo tersedia dalam <code>2 versi</code>_: Odoo Enterprise EE (licensed &amp; shared sources) dan Odoo Community CE (open-source).  Odoo EE menyediakan berbagai macam kelebihan dibandingkan dengan versi CE antara lain : 1. Support Layanan 2. Fitur Yang Lebih Lengkap 3. UI yang lebih baik 4. Fungsionalitas Modul yang lebih banyak 5. Tersedia Modul yang tidak ada di odoo CE \u2192 Akutansi, Studio, Approval, dll</p> <p>Ready to start? Before writing actual code, let's go to the :doc:<code>next chapter &lt;02_setup&gt;</code> to review the Odoo installation process. Even if Odoo is already running on your system, we strongly suggest you go through this chapter to make sure we start on the same page during the development of our new application.</p> <pre><code>multitier architecture: https://en.wikipedia.org/wiki/Multitier_architecture\ntutorial:   https://docs.python.org/3.7/tutorial/\ntwo versions:   https://www.odoo.com/page/editions\n</code></pre>"},{"location":"dev_tutorial/02_setup/","title":"Chapter 2: Development environment setup","text":"<p>Tergantung pada penggunaan masing-masing, ada beberapa cara untuk menginstal Odoo. Tutorial ini kita akan mengikuti penginstalan sumber ( menggunakan Source Code ), yang paling cocok untuk pengembangan dev. Odoo.</p> <p>Di sepanjang dokumen ini, kita berasumsi bahwa Anda menginstal lingkungan pengembangan Anda di laptop Linux ubuntu yang sudah terinstal dan mutakhir. Jika bukan itu marilah  kita gunakan Windows(seperyi penulis web ini) atau bisa juga menggunakan Mac OS tinggal disesuaikan saja di panduan instalasi odoo, tergantung pada OS yang kita gunakan. </p> <p>Langkah-langkahnya pada dasarnya tetap sama.</p> <p>1 Siapkan Git</p> <p>Instal dan konfigurasikan Git</p> <p>Langkah pertama dari proses instalasi adalah menginstal sistem kontrol versi Git karena kode sumber Odoo dikelola di GitHub . install GIT<pre><code> $ sudo apt install git\n</code></pre></p> Tips<pre><code> $ git --version # (1)\n</code></pre> <ol> <li> Periksa apakah Git terinstal dengan mencoba mencetak versi Git dengan perintah ini.</li> </ol>"}]}